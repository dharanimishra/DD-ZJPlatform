<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ziksana.persistence.assessment.AssignmentTestMapper">
	<sql id="Base_Column_List">
		AssignmentTestId, Active, UsageStartDate, UsageEndDate,
		Name, TestType,
		AssignmentContent,
		DificultyLevel, Instruction,
		ZeniCreatedIndicator, LearnerCreatedIndicator,
		MultipleAttemptsAllowedIndicator,
		OpenforPeerEvaluationIndicator,
		AsynchronousIndicator, ProctoringNeededIndicator,
		AnswerWithinTime,
		Status, LearningComponentId, MemberRoleId
	</sql>

	<insert id="saveTestSettings"
		parameterType="com.ziksana.domain.assessment.AssignmentTestSettings"
		useGeneratedKeys="true" keyProperty="assignmentTestRubricId"
		keyColumn="assignmenttestrubricid">
		insert into asmassignmenttestrubric
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="creationdate != null">
				creationdate,
			</if>
			<if test="cellvalue != null">
				cellvalue,
			</if>
			<if test="active != null">
				active,
			</if>
			<if test="testid != null">
				testid,
			</if>
			<if test="rubricid != null">
				rubricid,
			</if>
			<if test="rubricmatrixid != null">
				rubricmatrixid,
			</if>
		</trim>
		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			sysdate(),
			<if test="cellvalue != null">
				#{cellValue,jdbcType=INTEGER},
			</if>
			<if test="active != null">
				#{active,jdbcType=BOOLEAN},
			</if>
			<if test="test != null">
				#{test.testId,jdbcType=INTEGER},
			</if>
			<if test="rubric != null">
				#{rubric.rubricId,jdbcType=INTEGER},
			</if>
			<if test="rubricMatrix != null">
				#{rubricMatrix.rubricMatrixId,jdbcType=INTEGER},
			</if>
		</trim>
		<selectKey keyProperty="assignmentTestRubricId" resultType="int"
			order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>


	<insert id="saveTestSettings"
		parameterType="com.ziksana.domain.assessment.AssignmentTestSettings"
		useGeneratedKeys="true" keyProperty="testSettingsId" keyColumn="assignmenttestsettingsid">
		insert into asmassignmenttestsettings
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="creationdate != null">
				creationdate,
			</if>
			<if test="active != null">
				active,
			</if>
			<if test="property != null">
				property,
			</if>
			<if test="propertyvaluetype != null">
				propertyvaluetype,
			</if>
			<if test="propertyvalue != null">
				propertyvalue,
			</if>
			<if test="testid != null">
				testid,
			</if>
		</trim>
		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			sysdate(),
			<if test="active != null">
				#{active,jdbcType=BOOLEAN},
			</if>
			<if test="property != null">
				#{propertyId,jdbcType=INTEGER},
			</if>
			<if test="propertyValueType != null">
				#{propertyValueTypeId,jdbcType=INTEGER},
			</if>
			<if test="propertyValue != null">
				#{propertyValue,jdbcType=VARCHAR},
			</if>
			<if test="test != null">
				#{test.testId,jdbcType=INTEGER},
			</if>
		</trim>
		<selectKey keyProperty="testSettingsId" resultType="int"
			order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>

	<insert id="saveAssignment" parameterType="com.ziksana.domain.assessment.Assignment"
		useGeneratedKeys="true" keyProperty="assignmentId" keyColumn="assignmentid">
		insert into asmassignment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="active != null">
				Active,
			</if>
			<if test="name != null">
				Name,
			</if>
			<if test="assignmentcontent != null">
				assignmentcontent,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="learningcomponentid != null">
				learningcomponentid,
			</if>
			<if test="memberroleid != null">
				memberroleid,
			</if>
			<if test="isdelete != null">
				isdelete,
			</if>
		</trim>
		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			<if test="active != null">
				#{active,jdbcType=BOOLEAN},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="assignmentContent != null">
				#{assignmentContent,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{statusId,jdbcType=INTEGER},
			</if>
			<if test="learningComponent != null">
				#{learningComponent.learningComponentId,jdbcType=INTEGER},
			</if>
			<if test="creatorMemberPersona != null">
				#{creatorMemberPersona.memberRoleId,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
		</trim>
		<selectKey keyProperty="assignmentId" resultType="int"
			order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>

	<insert id="saveTest" parameterType="com.ziksana.domain.assessment.Test"
		useGeneratedKeys="true" keyProperty="testId" keyCoslumn="testid">
		insert into asmtest
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="active != null">
				active,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="testtype != null">
				testtype,
			</if>
			<if test="testcontent != null">
				testcontent,
			</if>
			<if test="dificultylevel != null">
				dificultylevel,
			</if>
			<if test="instruction != null">
				instruction,
			</if>
			<if test="zenicreatedindicator != null">
				zenicreatedindicator,
			</if>
			<if test="learnercreatedindicator != null">
				learnercreatedindicator,
			</if>
			<if test="multipleattemptsallowedindicator != null">
				multipleattemptsallowedindicator,
			</if>
			<if test="openforpeerevaluationindicator != null">
				openforpeerevaluationindicator,
			</if>
			<if test="asynchronousindicator != null">
				asynchronousindicator,
			</if>
			<if test="proctoringneededindicator != null">
				proctoringneededindicator,
			</if>
			<if test="answerWithinTime != null">
				AnswerWithinTime,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="assignmentid != null">
				assignmentid,
			</if>
			<if test="isdelete != null">
				isdelete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="active != null">
				#{active,jdbcType=BIT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="testType != null">
				#{testType,jdbcType=INTEGER},
			</if>
			<if test="testContent != null">
				#{testContent,jdbcType=VARCHAR},
			</if>
			<if test="dificultyLevel != null">
				#{dificultyLevelId,jdbcType=INTEGER},
			</if>
			<if test="instruction != null">
				#{instruction,jdbcType=VARCHAR},
			</if>
			<if test="isZeniCreated != null">
				#{isZeniCreated,jdbcType=BIT},
			</if>
			<if test="isLearnerCreated != null">
				#{isLearnerCreated,jdbcType=BIT},
			</if>
			<if test="isMultipleAttemptsAllowed != null">
				#{isMultipleAttemptsAllowed,jdbcType=BIT},
			</if>
			<if test="isOpenforPeerEvaluation != null">
				#{isOpenforPeerEvaluation,jdbcType=BIT},
			</if>
			<if test="isAsynchronous != null">
				#{isAsynchronous,jdbcType=BIT},
			</if>
			<if test="isProctoringNeeded != null">
				#{isProctoringNeeded,jdbcType=BIT},
			</if>
			<if test="status != null">
				#{statusId,jdbcType=INTEGER},
			</if>
			<if test="assignmentId != null">
				#{assignment.assignmentId,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=BOOLEAN},
			</if>
		</trim>
		<selectKey keyProperty="testId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>

	<update id="updateAssignment" parameterType="com.ziksana.domain.assessment.Assignment">
		update asmassignment
		<set>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="assignmentContent != null">
				#{assignmentContent,jdbcType=VARCHAR},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=BOOLEAN},
			</if>
		</set>
		where assignmentId = #{assignmentId,jdbcType=INTEGER}
	</update>


	<update id="updateTest" parameterType="com.ziksana.domain.assessment.Test">
		update asmtest
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="testType != null">
				testtype = #{testTypeId,jdbcType=INTEGER},
			</if>
			<if test="testContent != null">
				testcontent = #{testContent,jdbcType=VARCHAR},
			</if>
			<if test="dificultyLevel != null">
				dificultylevel = #{dificultyLevelId,jdbcType=INTEGER},
			</if>
			<if test="instruction != null">
				instruction = #{instruction,jdbcType=VARCHAR},
			</if>
			<if test="isMultipleAttemptsAllowed != null">
				multipleattemptsallowedindicator =
				#{isMultipleAttemptsAllowed,jdbcType=BOOLEAN},
			</if>
			<if test="isOpenforPeerEvaluation != null">
				openforpeerevaluationindicator =
				#{isOpenforPeerEvaluation,jdbcType=BOOLEAN},
			</if>
			<if test="isAsynchronous != null">
				asynchronousindicator =
				#{isAsynchronous,jdbcType=BOOLEAN},
			</if>
			<if test="isProctoringNeeded != null">
				proctoringneededindicator =
				#{isProctoringNeeded,jdbcType=BOOLEAN},
			</if>
			<if test="isDelete != null">
				isdelete = #{isDelete,jdbcType=BOOLEAN},
			</if>
		</set>
		where testId = #{testId,jdbcType=INTEGER}
	</update>


	<resultMap id="TestQuestionsMap" type="com.ziksana.domain.assessment.TestQuestion">
		<id column="CourseId" property="courseid" jdbcType="INTEGER" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<result column="CourseIdentifier" property="courseIdentifier"
			jdbcType="VARCHAR" />
		<association property="questionBank" column="questionbankid"
			javaType="com.ziksana.domain.assessment.QuestionBank" select="learningContentMap">
		</association>
	</resultMap>


</mapper>