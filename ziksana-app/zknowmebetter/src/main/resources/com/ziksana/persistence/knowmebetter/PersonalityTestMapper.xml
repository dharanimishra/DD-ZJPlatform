<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziksana.persistence.knowmebetter.PersonalityTestMapper">


	<select id="getUnansweredQuestions" resultMap="questionResultMap"
		parameterType="int">

 		select distinct qb.ID as questionBankId,
		qba.ID as QuestionBankAnswerId,
		qb.QuestionContent,
		qba.`AnswerContent`,
		qba.`AnswerSequence`,
		qb.MemberRoleId
		from
		psttestquestion q
		JOIN asmquestionbank qb
		ON
		q.QuestionBankId=qb.ID
		JOIN asmquestionbankanswer qba ON
		qb.ID=qba.QuestionBankId
		
		LEFT
		OUTER JOIN
		pstmemberpersonalityresponse r ON
		q.ID=r.TestQuestionId
		JOIN
		pstmemberpersonalitytest mpt ON
		mpt.ID=mpt.ID
		
		where
		r.TestQuestionId is null and
		(qb.MemberRoleId = #{memberRoleId}) order
		by qba.ID asc
		
		 
	</select>

	<select id="getUnansweredQuestionsbyId" resultMap="questionResultMap"
		parameterType="map">

		select distinct qb.ID as questionbankid,
		qba.ID as QuestionBankAnswerId,
		qb.QuestionContent,
		qba.`AnswerContent`,
		qba.`AnswerSequence` ,mpt.MemberRoleId,
		mpt.ID as MemberPersonalityTestId

		from
		psttestquestion q
		JOIN asmquestionbank qb
		ON
		q.QuestionBankId=qb.ID
		JOIN asmquestionbankanswer qba ON
		qb.ID=qba.QuestionBankId
		JOIN
		pstmemberpersonalitytest mpt
		ON
		mpt.ID=mpt.ID
		where
		mpt.MemberRoleId=  #{memberRoleId} and
		qb.ID=#{questionBankId}
		
	</select>




	<resultMap id="questionResultMap" type="com.ziksana.domain.common.Question">

		<constructor>


			<idArg column="questionbankid" javaType="Integer" />
			<idArg column="QuestionContent" javaType="String" />

		</constructor>

		<collection property="choices" ofType="com.ziksana.domain.common.Choice">
			<constructor>
				<idArg column="QuestionBankAnswerId" javaType="Integer" />
				<idArg column="AnswerSequence" javaType="Integer" />
				<idArg column="AnswerContent" javaType="String" />
				
			</constructor>
		</collection>



	</resultMap>

	<update id="updateAnswer" parameterType="map">
		update
		pstmemberpersonalityresponse set

		MemberAnswer= #{answer.text},
		ResponseDate = now(),
		questionbankAnswerId=#{answer.id.storageID}

		where
		TestQuestionId =#{question.questionId} and
		memberPersonalityTestId=#{answer.memPstTestId}


	</update>


	<insert id="saveAnswer" parameterType="map" useGeneratedKeys="true"
		keyProperty="MemPersonalityRespId">

		insert into pstmemberpersonalityresponse(
		MemberAnswer,ResponseDate,TestQuestionId,QuestionBankAnswerId,MemberPersonalityTestId)
		values(
		#{answer.text},now(),#{question.questionId},#{answer.id.storageID},
		(select ID from pstmemberpersonalitytest where memberroleid= #{memberRoleId}) )

		<selectKey keyProperty="MemPersonalityRespId" resultType="int"
			order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>

	</insert>


	<select id="answeredQuestions" resultMap="questionResMap"
		parameterType="int">
	select distinct q.*,
		qb1.QuestionContent,
		qba.ID  as QuestionBankAnswerId,
		qba.`AnswerContent`, qba.`AnswerSequence`,mpt.MemberRoleId,
		r.MemberAnswer,r.TestQuestionId as TestQuestionId,
		mpt.ID as MemberPersonalityTestId, r.responseDate
		from
		psttestquestion q
		JOIN
		asmquestionbank qb
		ON
		q.ID=q.QuestionBankId

		JOIN
		asmquestionbank qb1
		ON q.QuestionBankId=qb1.ID

		JOIN
		asmquestionbankanswer qba ON
		qb.ID=qba.QuestionBankId
		JOIN
		pstmemberpersonalityresponse r ON
		q.ID=r.TestQuestionId and
		qba.ID=r.QuestionBankAnswerId
		JOIN
		pstmemberpersonalitytest mpt ON
		mpt.ID=r.MemberPersonalityTestId
		where
		mpt.MemberRoleId=#{memberRoleId} order by r.ResponseDate desc
		
		<!-- select distinct q.*,
		qb1.QuestionContent,
		qba.QuestionBankAnswerId,
		qba.`Answer Content`, qba.`Answer Sequence`,mpt.MemberRoleId,
		r.MemberAnswer,
		mpt.MemberPersonalityTestId, r.responseDate
		from
		psttestquestion q
		JOIN
		asmquestionbank qb
		ON
		q.QuestionBankId=q.QuestionBankId

		JOIN
		asmquestionbank qb1
		ON q.QuestionBankId=qb1.QuestionBankId

		JOIN
		asmquestionbankanswer qba ON
		qb.QuestionBankId=qba.QuestionBankId
		JOIN
		pstmemberpersonalityresponse r ON
		q.TestQuestionId=r.TestQuestionId and
		qba.QuestionBankAnswerId=r.QuestionBankAnswerId
		JOIN
		pstmemberpersonalitytest mpt ON
		mpt.MemberPersonalityTestId=r.MemberPersonalityTestId
		where
		mpt.MemberRoleId=#{memberRoleId} order by r.ResponseDate desc -->

	</select>


	<resultMap id="questionResMap" type="com.ziksana.domain.common.QuestionResponse">

		<association property="question" javaType="com.ziksana.domain.common.Question"
			resultMap="questionResult" />
		<association property="choice" javaType="com.ziksana.domain.common.Choice"
			resultMap="choiceResult" />




	</resultMap>

	<resultMap id="questionResult" type="com.ziksana.domain.common.Question">

		<constructor>
			<idArg column="TestQuestionId" javaType="Integer" />
			
			<idArg column="QuestionContent" javaType="String" />
			<idArg column="responseDate" javaType="String" />
		</constructor>


	</resultMap>


	<resultMap id="choiceResult" type="com.ziksana.domain.common.Choice">

		<constructor>
			<idArg column="AnswerSequence" javaType="Integer" />
			<idArg column="QuestionBankAnswerId" javaType="Integer" />
			<idArg column="MemberAnswer" javaType="String" />
			<idArg column="MemberPersonalityTestId" javaType="Integer" />
		</constructor>


	</resultMap>





</mapper>
